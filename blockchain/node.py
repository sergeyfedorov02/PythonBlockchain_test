import json


class Node:
    blocks_array = []

    def __init__(self, server_id):
        self.server_id = server_id
        self.block_index = None

    # Обработчик пришедшего блока
    def block_handler(self, received_block):

        # Получим значения пришедшего Hash и Index
        python_object = json.loads(received_block)
        received_index = int(python_object['index'])

        # Если это был Genesis -> добавим его
        if received_index == 0:
            self.blocks_array.append(received_block)
            self.block_index = 0
            print(block_to_string(python_object))
            return True

        # Это блок, которого у нас еще нет -> запишем его
        blocks_array_object = json.loads(self.blocks_array[-1])
        last_block_index = blocks_array_object['index']
        if received_index > last_block_index:
            self.blocks_array.append(received_block)
            self.block_index = received_index
            if self.server_id != python_object['This block generated by Node '][0]:
                print(block_to_string(python_object))
            return True

        return False


def block_to_string(json_block):
    index = int(json_block['index'])
    current_hash = json_block['hash']
    prev_hash = json_block['prev_hash']
    data = json_block['data']
    nonce = int(json_block['nonce'])
    generated_node_number = json_block['This block generated by Node '][0]

    return f'This block generated by Node [{generated_node_number}]:     Index = {index}, Hash = {current_hash}, ' \
           f'Prev_Hash = {prev_hash}, Data = {data}, Nonce = {nonce}'
